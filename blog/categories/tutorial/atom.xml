<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tutorial | Geshan's Blog]]></title>
  <link href="http://geshan.com.np/blog/categories/tutorial/atom.xml" rel="self"/>
  <link href="http://geshan.com.np/"/>
  <updated>2018-10-26T22:55:08+11:00</updated>
  <id>http://geshan.com.np/</id>
  <author>
    <name><![CDATA[Geshan Manandhar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting Started With PHP (LEMP) on Vagrant, the Easiest Way - 200th Post]]></title>
    <link href="http://geshan.com.np/blog/2014/07/getting-started-with-php-lemp-on-vagrant/"/>
    <updated>2014-07-05T20:34:00+10:00</updated>
    <id>http://geshan.com.np/blog/2014/07/getting-started-with-php-lemp-on-vagrant</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">A software engineer tells to a colleague in his team &#8220;Man, it is working on your machine, but why is it not working on mine?&#8221;, then they both find out that one has Ubuntu 12.04 LTS with PHP 5.3 and the other software engineer on which the code is working is Ubuntu 14.04 with PHP 5.5 after some investigation. If you have ever faced this or similar problem its high time to switch to a portable and a reproducible virtual development environment shared among all team members. This is a context where <a href="http://www.vagrantup.com/" target="_blank">Vagrant</a> comes into play.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-0ekdx2Cp0uU/U7esIpWAFVI/AAAAAAAA0kg/ezrqt-e-CVE/s1600/vagrant.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-0ekdx2Cp0uU/U7esIpWAFVI/AAAAAAAA0kg/ezrqt-e-CVE/s1600/vagrant.png" height="360" width="640" /></a></div><br />If you have stack that involves many applications like PHP, Nginx, PHP-Fpm, Mysql, Rabbit Mq, Redis etc then making sure your team (even a small one with 3-4 members) have the same version for all above software will surely be a pain you don&#8217;t want to take care of.<br /><blockquote>This post is going to be developer&#8217;s perspective on using Vagrant as a virtualized development environment with minimal mention and coverage of the devOps and system side of Vagrant.</blockquote><!-- more --><h3 style="text-align: left;">What is Vagrant</h3>Vagrant is a container software that helps in creating virtual, lightweight, portable and reproducible development environment. Vagrant is a wrapper that can create a virtual machine using a provider like virtual box and a provisioner like puppet to create a server with exact requirements. It basically starts from a simple text file named Vagrantfile.<br /><h3 style="text-align: left;">Why Vagrant</h3>There are many reasons to use a virtual development machine, some of them are:<br /><br /><ol style="text-align: left;"><li>The <b>Vagrant virtual box is reproducible and portable</b> so all the team members share it and have the same development environment with all the software in desired versions.</li><li><b>Vagrant is OS agnostic</b>, it runs on Linux, Mac and Windows. The main thing is the virtual machine which is generally a Linux distro. So your software engineers can even use windows but have the same virtual box shared.</li><li><b>Vagrant saves time</b>, earlier it used to take at least more than one day to setup a development machine and all the applications. Now as the machine is already setup its the time it takes to download and build the machine. If you can build an automated installer for the application a new software engineer can get up and running in matter of hours and not day(s).</li><li><b>Updating existing software is easy</b>, if any software in the development stack changes lets say the team decides to use PHP 5.5 from PHP 5.4, the vagrant config is changed all users reload their vagrant machine and all team members have PHP 5.5.</li><li><b>Installing new software is easy</b>, lets say the team decides to use RabbitMq for messaging. RabbitMq can be added to the vagrant box in the vagrant config and all software engineers reload/reprovision their vagrant machines and all of them get RabbitMq.</li><li><b>Shared services, configs and file paths</b>, when you use vagrant the code base is in the host machine which is shared with the virtual box. The paths for all the application, application executable, services like nginx, mysql, configuration of the applications like error reporting in php.ini and even passwords like mysql root password are shared and consistent.</li></ol><h3 style="text-align: left;">Vagrant lingo</h3>To know Vagrant better you need to wrap your head around the Vagrant jargon. Here are some basic and important ones:<br /><h4 style="text-align: left;">Boxes</h4>A box is&nbsp;a package containing a representation of a virtual machine running a specific operating system, for a specific Provider. You can find a list of <a href="http://www.vagrantbox.es/" target="_blank">boxes</a> and start playing with them.<br /><h4 style="text-align: left;">Provider</h4><div>Providers are&nbsp;software responsible for creating and managing the virtual machines used by Vagrant. <a href="https://www.virtualbox.org/" target="_blank">VirtualBox</a> and <a href="http://www.vmware.com/" target="_blank">Vmware</a> are popular ones. For this example we will use VirtualBox.</div><h4 style="text-align: left;">Provisioner</h4><div>Provisioners are used to set up the virtual server, installing all necessary software and executing different commands in sequence. The most used provisioners are <a href="http://puppetlabs.com/" target="_blank">Puppet</a>, <a href="http://www.getchef.com/chef/" target="_blank">Chef</a> and <a href="http://www.ansible.com/home" target="_blank">Ansible</a>. Shell Script is also a very common option. We will use Puppet for this example and a <a href="http://www.erikaheidi.com/blog/vagrant-usage-research" target="_blank">survey</a> says its used the most.</div><h4 style="text-align: left;">Vagrantfile</h4><div>Vagrantfile is the main entry point file to build the vagrant virtual box, it is used to define the base box and other config like the memory to allocate to the virtual machine etc. Other configs like host, forwared port, synced folder etc on this file.</div><h3 style="text-align: left;">More on Vagrant</h3>Vagrant is very useful software to have a standard and consistent development environment shared among the team of software engineers. It capsules the software stack and its config with users in a virtual box which is portable and easily reproducible. If you want to know more about refer to the official <a href="https://docs.vagrantup.com/v2/" target="_blank">docs</a> and this series by <a href="http://www.erikaheidi.com/" target="_blank">Erika Heidi</a>&nbsp;in <a href="http://www.erikaheidi.com/blog/a-begginers-guide-to-vagrant-getting-your-portable-development-e" target="_blank">part 1</a>, <a href="http://www.erikaheidi.com/blog/a-beginners-guide-to-vagrant-part-2-provisioning-and-puppet" target="_blank">part 2</a> and <a href="http://www.erikaheidi.com/blog/a-beginners-guide-to-vagrant-and-puppet-part-3-facts-conditional" target="_blank">part 3</a> is also great to know more about Vagrant.<br /><br />Vagrant also has alternatives, while many may argue that comparing Vagrant and <a href="http://www.docker.com/" target="_blank">Docker</a> is comparing apples and oranges. In case of having a virtual machine for dev only they can be the two alternatives. Some early problems I faced with docker is, because it is a Linux container data persistence is an issue. Also for the development environment I don&#8217;t think that linking 4 containers to get PHP, MySql, RabbitMq, Redis working is really practical.<br /><br /><blockquote class="twitter-tweet" lang="en">Google Trends - Web Search interest: vagrant, docker - Worldwide, Jun 2013 - May 2014 <a href="http://t.co/ZpijZyixPd">http://t.co/ZpijZyixPd</a> <a href="https://twitter.com/hashtag/googletrendsexplore?src=hash">#googletrendsexplore</a><br />â€” Geshan Manandhar (@geshan) <a href="https://twitter.com/geshan/statuses/485291069819473920">July 5, 2014</a></blockquote><script async="" charset="utf-8" src="//platform.twitter.com/widgets.js"></script><br /><br />If you look at the current popularity in Google they are performing head to head.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-4vAwSP1jHao/U7eyrIRYlKI/AAAAAAAA0kw/CNKw9OLKabA/s1600/vagrant-vs-docker-June2013-May2014.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-4vAwSP1jHao/U7eyrIRYlKI/AAAAAAAA0kw/CNKw9OLKabA/s1600/vagrant-vs-docker-June2013-May2014.png" height="435" width="640" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div>As for now for my local development environment I am happy with Vagrant over Docker.<br /><h3 style="text-align: left;">PHP (LEMP) on vagrant, the easiest way</h3>In context of this post I will build and run a vagrant virtual box with LEMP - Linux Nginx Mysql and PHP with a GUI vagrant box builder <a href="https://puphpet.com/">Puphpet.com</a>. It is the easiest way as you just need to select what you need from the GUI get the file, then run vagrant up and you are done.<br /><br />This recipe is based on Network File System (<a href="http://docs.vagrantup.com/v2/synced-folders/nfs.html" target="_blank">NFS</a>) to share the project files from a Linux host machine which does not work in Windows. For this tutorial you will need to download and install the following prerequisites.<br /><ul style="text-align: left;"><li><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank">VirtualBox</a></li><li><a href="http://www.vagrantup.com/downloads.html" target="_blank">Vagrant</a></li></ul><br />How you install the above two will depend on your OS and if the OS is 32 bit or 64 bit. TO get NFS on your Ubuntu run : <b>sudo apt-get install nfs-server.</b><br /><br />After you have VirtualBox, Vagrant and NFS server installed on your host machine (main system preferably Ubuntu), then you can go to <a href="https://puphpet.com/" target="_blank">Puphpet.com</a>.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-UvR3NCDOjIc/U7e2Cc2rr4I/AAAAAAAA0k8/Sd2AodP4_es/s1600/puphpet.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-UvR3NCDOjIc/U7e2Cc2rr4I/AAAAAAAA0k8/Sd2AodP4_es/s1600/puphpet.png" height="360" width="640" /></a></div><div><br /></div>Follow the steps on the left one after the other, check &#8220;Locally&#8221; in &#8220;Where do you want your virtual machine?&#8221; part of the &#8220;Deploy Target&#8221; step. All other things are quite obvious, be sure to select &#8220;NFS&#8221; on the &#8220;Shared Folder Type&#8221; part. Please select &#8217;<b>../</b>&#8217; in&nbsp;<b>Box Sync Folder Source</b> part so that the vagrant and other projects can be placed on the same folder.<br /><div><br /></div><div>In the next section Server Packages, I added vim, git-core, htop and curl. You can add the packages you need.</div><div><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-ypuD3wxjV7Y/U7e4_rXmtzI/AAAAAAAA0lI/qQgCsJORbrA/s1600/puphpet-section-2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-ypuD3wxjV7Y/U7e4_rXmtzI/AAAAAAAA0lI/qQgCsJORbrA/s1600/puphpet-section-2.png" height="361" width="640" /></a></div><div class="separator" style="clear: both; text-align: center;"><br /></div><div class="separator" style="clear: both; text-align: left;">You can skip the firewall section, in the WebServers section select Nginx, and define if you need more virtual hosts. Awesome.dev is already added for you, if you need SSL that can also be checked.</div><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-cPIATcICPSk/U7e5jelEYPI/AAAAAAAA0lQ/M_C2ApUY5E0/s1600/puphpet-webserver-04.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-cPIATcICPSk/U7e5jelEYPI/AAAAAAAA0lQ/M_C2ApUY5E0/s1600/puphpet-webserver-04.png" height="344" width="640" /></a></div><div class="separator" style="clear: both; text-align: left;">In the Language section you can select PHP with version 5.5, do add the PHP module you need like gd, mysql etc. I highly recommend you to check &#8216;XDebug&#8217; to use it with an IDE like PHPStorm or NetBeans.</div><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-DoxhVmYt5yU/U7e6TgBhf-I/AAAAAAAA0lc/YFR8CHNtoFQ/s1600/puphpet-language05.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-DoxhVmYt5yU/U7e6TgBhf-I/AAAAAAAA0lc/YFR8CHNtoFQ/s1600/puphpet-language05.png" height="361" width="640" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;">In the databases section you should select MySQL and add new databases if you need it, be sure of the root password. I would recommend downloading and installing PhpMyAdmin later with a different virtual host added to the config.yaml file later. If you need Redis, click Redis and check &#8216;Install Redis&#8217; as well.</div><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-zwwMTtMpnxk/U7e7F_QaBAI/AAAAAAAA0lk/Ehqc-Ap77xw/s1600/puphpet-databases06.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-zwwMTtMpnxk/U7e7F_QaBAI/AAAAAAAA0lk/Ehqc-Ap77xw/s1600/puphpet-databases06.png" height="361" width="640" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;">If you need RabbitMq you can install it in the next &#8220;Work Queues&#8221; section. Click &#8220;Work Queues&#8221; then &#8220;RabbitMQ&#8221; after than check &#8220;Install RabbitMQ&#8221;:</div><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-exmWvMlWUJE/U7e7wi1ErKI/AAAAAAAA0lw/HBkP0YXH-Rs/s1600/puphpet-work-queues-7.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-exmWvMlWUJE/U7e7wi1ErKI/AAAAAAAA0lw/HBkP0YXH-Rs/s1600/puphpet-work-queues-7.png" height="353" width="640" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div>In the next section you can install &#8220;Elastic Search&#8221; if you need it as below:</div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/--fq1Ow4gOhc/U7e8_lOyorI/AAAAAAAA0l4/YDr14oJ9Nns/s1600/puphpet-search-server8.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/--fq1Ow4gOhc/U7e8_lOyorI/AAAAAAAA0l4/YDr14oJ9Nns/s1600/puphpet-search-server8.png" height="355" width="640" /></a></div><div>Then you can download your Vagrant configuration as a zip file as below:</div><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-XmSLDqWncHY/U7e9WqKWhcI/AAAAAAAA0mA/unzRQeStG2g/s1600/puphpet-create09.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-XmSLDqWncHY/U7e9WqKWhcI/AAAAAAAA0mA/unzRQeStG2g/s1600/puphpet-create09.png" height="356" width="640" /></a></div><div>After you get the &#8217;<b>puphpet.zip</b>&#8217; named zip file unzip it, to get a randomly named folder like &#8217;<b>NGX2Rz</b>&#8217;, which will have the Vagrantfile and&nbsp;puphpet folder which has all the config for all the software stack selected in the GUI like below:</div><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-GdNT9-my3Ic/U7e-aOjM1EI/AAAAAAAA0mM/5YSQk_2TdtE/s1600/unzip-puphpet.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-GdNT9-my3Ic/U7e-aOjM1EI/AAAAAAAA0mM/5YSQk_2TdtE/s1600/unzip-puphpet.png" height="264" width="640" /></a></div><div class="separator" style="clear: both; text-align: left;">I recommend creating a &#8216;projects&#8217; folder in you home so it will be /home/<yourusername>/projects and rename the NGX2Rz folder to vagrant then move /home/<yourusername>/projects folder. So you wll have /home/<yourusername>/projects/vagrant and your projects lets say my-project at /home/<yourusername>/projects/my-project.</yourusername></yourusername></yourusername></yourusername></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;">Then go to /home/<yourusername>/projects/vagrant which will have the Vagrantfile and puphpet folder, then run <b>vagrant up </b>to build your machine. You should get an output like this <a href="https://gist.github.com/geshan/c00298ea22c2d56cd5be" target="_blank">gist</a>&nbsp;it will take some time to download the box depending on your internet speed and some more time to build the machine.</yourusername></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div>While the machine is being download and built, you can add the new hosts to your <b>/etc/hosts</b>. Add<br /><br />192.168.56.101 vagrant.dev<br />192.168.56.101 awesome.dev<br /><br />Then after the machine is up you can access <b>awesome.dev</b> provided the folders are placed correctly and the nginx virtual host is fine. If you have installed Rabbit MQ you can access the management plugin at&nbsp;http://vagrant.dev:15672 .<br /><br />If you want to check the virtual machine or execute commands in the new virtual box managed by Vagrant you can do a <b>vagrant ssh </b>and login to the virtual box with SSH. You will see a bash like below:<br /><br /></div><div><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-2mX0BWMV7rg/U7fBbjWLfnI/AAAAAAAA0mY/O3HessasIjQ/s1600/vagrant-ssh.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-2mX0BWMV7rg/U7fBbjWLfnI/AAAAAAAA0mY/O3HessasIjQ/s1600/vagrant-ssh.png" height="376" width="640" /></a></div>You can try htop command to check what is running on the machine. To get started with Vagrant <a href="http://scotch.io/tutorials/get-vagrant-up-and-running-in-no-time" target="_blank">Scotch</a> and <a href="http://briananglin.me/2013/11/what-is-vagrant/" target="_blank">Brian</a> also have good blog posts.<br /><h3 style="text-align: left;">Conclusion</h3></div><div>Vagrant is an amazing tool that enables producing portable, reproducible and consistent virtual development environment that can be shared with a team of software engineers. It saves you from installing the right version of PHP, MySQL and other needed software in the stack. You should really give it a try and move all your projects to Vagrant.</div><div><br /></div><div>PS: This is my 200th blog post and it has been more than 7 years I started blogging.</div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using PHPUnit Data Provider for Less Code and Greater Coverage]]></title>
    <link href="http://geshan.com.np/blog/2014/02/using-phpunit-data-provider-for-less/"/>
    <updated>2014-02-01T18:51:00+11:00</updated>
    <id>http://geshan.com.np/blog/2014/02/using-phpunit-data-provider-for-less</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div class="separator" style="clear: both; text-align: center;"></div>Writing testable code is a harder target to achieve than just writing tests for the code written. You cannot write comprehensive tests that covers many function each of 200 or more lines and classes that measure 1000s of lines of code (<a href="http://en.wikipedia.org/wiki/Source_lines_of_code" target="_blank">LOC</a>). Writing testable code is always important if you want to be able to test/unit test your code and be confident that nothing will break.<br /><br />Tests also help a lot when you re-factor some code or write new features. If all the tests are passing you are quite sure that nothing is breaking. Seeing all tests come out green is a very good sight for us software engineer.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-mIzQVI5oxMU/Uuu1Bn0PmKI/AAAAAAAAndg/Wkq0HGPD1pM/s1600/all_green_tests.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-mIzQVI5oxMU/Uuu1Bn0PmKI/AAAAAAAAndg/Wkq0HGPD1pM/s1600/all_green_tests.jpg" height="156" width="640" /></a></div><!-- more --><br /><h2 style="text-align: left;">Testing in PHP with PHPUnit</h2>Unit testing and testing as a whole is not a new thing in PHP, &nbsp;<a href="http://phpunit.de/" target="_blank">PHPUnit</a> the de facto unit testing framework in PHP started in <a href="http://gpfr.sourceforge.net/releases/phpunit-1.0.0/" target="_blank">2001</a>, The chart below shows that popularity of PHPUnit has really grown over the past years in comparison to <a href="http://www.simpletest.org/" target="_blank">Simple Test</a> another PHP testing framework.<br /><br /><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-iY16ziAjtiE/UuylucQEn-I/AAAAAAAAndw/cSZ9W2csjUM/s1600/phpUnit_popularity.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" src="http://1.bp.blogspot.com/-iY16ziAjtiE/UuylucQEn-I/AAAAAAAAndw/cSZ9W2csjUM/s1600/phpUnit_popularity.jpg" height="387" width="640" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;"><span style="font-size: small;">Source:&nbsp;</span><a href="http://www.google.com/trends/explore#q=phpunit%2C%20simpletest" style="font-size: medium;" target="_blank">Google Trends</a></td></tr></tbody></table>PHPUnit is a great unit testing framework that can automate testing and help in getting optimal output. As they state in the <a href="http://phpunit.de/manual/current/en/index.html" target="_blank">documentation</a>:<br /><blockquote>The difference between a good programmer and a bad programmer is that the good programmer uses tests to detect mistakes as soon as possible. The sooner you test for a mistake the greater your chance of finding it and the less it will cost to find and fix.</blockquote>It is true the sooner the problem is detected and fixed the better it is, same goes when some code is re-factored, a new feature is added or a bug resolved.<br /><h2 style="text-align: left;">Data Provider in PHPUnit</h2><div>There are may features of PHPUnit, which can help in writing comprehensive <a href="http://en.wikipedia.org/wiki/Unit_testing" target="_blank">unit testing</a> and moving toward the direction of <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">test driven development</a> (TDD). Among them,&nbsp;<a href="http://phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers" target="_blank">data providers</a> provide arbitrary arguments to a test function so that same code can be used to test multiple scenarios and possible cases. In this very simple example I will use a part of checkout. The logic is very simple:</div><div><ol style="text-align: left;"><li>If the payment method is &nbsp;&#8220;Cash&#8221;, apply a cash on delivery fee of 5.0</li><li>If the payment method is &#8220;Credit Card&#8221;, do not apply a cash on delivery fee.&nbsp;</li></ol><h3 style="text-align: left;">The part of the checkout class is given below:</h3><script src="http://gist-it.appspot.com/https://github.com/geshan/dataprovider-example/blob/master/src/DataProvider/Example/Checkout.php"></script><br />Source: <a href="https://github.com/geshan/dataprovider-example/blob/master/src/DataProvider/Example/Checkout.php" target="_blank">Github repository</a><br /><br /><h3 style="text-align: left;">The test for the above checkout class is given below:</h3><script src="http://gist-it.appspot.com/https://github.com/geshan/dataprovider-example/blob/master/tests/DataProvider/Example/Test/CheckoutTest.php"></script><br />Source: <a href="https://github.com/geshan/dataprovider-example/blob/master/tests/DataProvider/Example/Test/CheckoutTest.php" target="_blank">Github repository</a><br /><h3 style="text-align: left;">What makes using data provider in this example relevant and optimal?</h3></div><div><ul style="text-align: left;"><li>As the test needs to be run for both &#8220;Cash&#8221; and &#8220;Credit Card&#8221; the only thing it changes here is the addition of cash on delivery fee.</li><li>There is just one test with the payment method being passed as a parameter, saving us from writing X no of tests for X no. of payment methods. So less code and more coverage.</li><li>The test is clear concise and understandable.</li></ul><h3 style="text-align: left;">Things to consider in the code:</h3><div><ul style="text-align: left;"><li>The test runs the as many times as the data set provided by the provider function.</li><li>@dataProvider annotation is necessary in the test to get the data sets from the provider function.</li><li>When writing the provider function, its better to comment who is using the provided data sets and the order of variables (check the comment of &nbsp;paymentMethodProvider method).</li></ul><div>Both the above files with composer.json is available as a public <a href="https://github.com/geshan/dataprovider-example" target="_blank">git repository</a> for your reference, you can check the <a href="https://github.com/geshan/dataprovider-example/blob/master/README.md" target="_blank">read me</a> file to know how to run the tests.</div></div><h2 style="text-align: left;">Conclusion</h2></div><div>Whenever you write tests and think, &#8220;Why am I writing a new test for the similar thing. I guess there can be a way to write less test/code and cover all my test cases.&#8221; Then is time to use data providers in PHPUnit. You save on time and effort to cover the cases, a new case is just another array in the provider function, even in case of new test cases being added its a one line change given the tests pass. I hope this helps you to write less test code and achieve more coverage.</div><div><br /></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Introduction and Hands on Usage Guide for Windows With Msysgit]]></title>
    <link href="http://geshan.com.np/blog/2012/02/git-introduction-and-hand-on-usage/"/>
    <updated>2012-02-16T19:43:00+11:00</updated>
    <id>http://geshan.com.np/blog/2012/02/git-introduction-and-hand-on-usage</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div dir="ltr" style="text-align: left;" trbidi="on">Git is a &nbsp;free &amp; open source, distributed version control system which can be used for projects of any size and complexity. I have been using git for more than past 2 and half years, you can even see my <a href="https://github.com/geshan" target="_blank">github</a> and I find git essential for most of the projects I have been involved in. If there are multiple developers (be it one developer and one front end developer) you should consider using git. It is a developer&#8217;s best friend and even helps you go back to history and see how your code/website looked like may be 2 months back (provided you do regular commits).<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-x9VAF7zgiA4/TzjLk6ZZI3I/AAAAAAAANeU/GZoKHjM_0ak/s1600/git_on_windows.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-x9VAF7zgiA4/TzjLk6ZZI3I/AAAAAAAANeU/GZoKHjM_0ak/s400/git_on_windows.jpg" height="297" width="400" /></a></div><!--more--><br />Git was developed by Linus Travolds yes the guy who coded linux kernel. He says &#8220;I&#8217;m an egotistical bastard, and I name all my projects after myself. First Linux, now git.&#8221; May be true but git is free and a great tool to have in your development tool set. Git is more for the command line person so its not very easy to get started with windows. Now using the <a href="http://code.google.com/p/msysgit/" target="_blank">Msysgit </a>you can git yourself quite easily in windows, so the slides below may be the icebreaker you were looking for to start git in window. (I am using windows 7 - 64 bit)<br /><br /><br /><iframe allowfullscreen="" frameborder="0" height="486" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/21373451?rel=0" style="border-width: 1px; border: 1px solid #CCC; margin-bottom: 5px; max-width: 100%;" width="597"> </iframe><br /><br /></div><blockquote>I hope this helps you to get started with git on windows.</blockquote></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drupal 7 Must Have Modules, Content Type Config and Views Intro [Slides]]]></title>
    <link href="http://geshan.com.np/blog/2011/11/drupal-7-must-have-modules-content-type/"/>
    <updated>2011-11-22T03:01:00+11:00</updated>
    <id>http://geshan.com.np/blog/2011/11/drupal-7-must-have-modules-content-type</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div dir="ltr" style="text-align: left;" trbidi="on"><div dir="ltr" style="text-align: left;" trbidi="on">Here is the part 3 of the series, in this part I explain about the must have modules for Drupal 7 from ones included in core to some essential contrib modules. Then I elaborate on content types, how to create them and how many. There is a starter guide to building a&nbsp;recipe&nbsp;of a Brochure site but some content types are left for you to complete. Finally there is a basic introduction to views 3 without going into the full interface of views so as not to scare you.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-kqtLJnKO2VA/Tsp3U8i1y4I/AAAAAAAAMoE/IbQPJ2PvJ78/s1600/Drupal_Content_Types_Contrib_Modules.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="298" src="http://1.bp.blogspot.com/-kqtLJnKO2VA/Tsp3U8i1y4I/AAAAAAAAMoE/IbQPJ2PvJ78/s400/Drupal_Content_Types_Contrib_Modules.png" width="400" /></a></div><br /><br />The intro to views is quite basic and other information is also targeted towards developers, so these slides may be a little difficult to grasp but practice makes perfect ;).<br /><br />The slides are below:<br /><br /></div><iframe class="scribd_iframe_embed" data-aspect-ratio="1.33333333333333" data-auto-height="true" frameborder="0" height="600" id="doc_68853" scrolling="no" src="http://www.scribd.com/embeds/73359264/content?start_page=1&amp;view_mode=slideshow&amp;access_key=key-o96apuy6rjebvu4dlmj&amp;secret_password=2a3j2ptjx6tevs7n2oc0" width="100%"></iframe><script type="text/javascript">(function() { var scribd = document.createElement("script"); scribd.type = "text/javascript"; scribd.async = true; scribd.src = "http://www.scribd.com/javascripts/embed_code/inject.js"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(scribd, s); })(); </script><a href="http://www.scribd.com/doc/73359264/Drupal-7-basic-setup-and-Contrib-Modules-Brochure-Website-Recipie?secret_password=2a3j2ptjx6tevs7n2oc0" style="-x-system-font: none; display: block; font-family: Helvetica,Arial,Sans-serif; font-size-adjust: none; font-size: 14px; font-stretch: normal; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; margin: 12px auto 6px auto; text-decoration: underline;" targert="_blank" title="View Drupal  7 basic setup and Contrib Modules - Brochure Website Recipie on Scribd">Drupal  7 basic setup and Contrib Modules - Brochure Website Recipie</a> - View on Scribd </div><blockquote>I hope it give you some idea on how a Drupal website is built.</blockquote></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Drupal 7 and Basic Configs [Slides]]]></title>
    <link href="http://geshan.com.np/blog/2011/11/how-to-install-drupal-7-and-basic/"/>
    <updated>2011-11-18T16:41:00+11:00</updated>
    <id>http://geshan.com.np/blog/2011/11/how-to-install-drupal-7-and-basic</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div dir="ltr" style="text-align: left;" trbidi="on">Drupal 7.9 released around a month back and it was when I created theses slides. Its very basic but focuses on linux (Ubuntu) it should not be very different from windows ;). It was developed for YIPLites.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-9UCgZJNEM1k/TsXw_8mDmiI/AAAAAAAAMn8/7EY1eORe0mU/s1600/Drupal_Install.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="238" src="http://1.bp.blogspot.com/-9UCgZJNEM1k/TsXw_8mDmiI/AAAAAAAAMn8/7EY1eORe0mU/s320/Drupal_Install.png" width="320" /></a></div><div class="separator" style="clear: both; text-align: center;"><br /></div><div class="separator" style="clear: both; text-align: left;">The Slides:</div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: center;"><iframe allowfullscreen="true" frameborder="0" height="389" src="https://docs.google.com/presentation/embed?id=1O7Iym6BHmjyRbYFl4YdSw60wcPDm2PZf_0bMKncCwWc&amp;start=false&amp;loop=false&amp;delayms=3000" webkitallowfullscreen="true" width="480"></iframe></div><br /><br /><blockquote>I hope it helps you get started with Drupal 7 ;).</blockquote></div></div></div>

]]></content>
  </entry>
  
</feed>
