<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: technology | Geshan's Blog]]></title>
  <link href="https://geshan.com.np/blog/categories/technology/atom.xml" rel="self"/>
  <link href="https://geshan.com.np/"/>
  <updated>2018-10-13T11:30:23+11:00</updated>
  <id>https://geshan.com.np/</id>
  <author>
    <name><![CDATA[Geshan Manandhar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Don't code your microservice like a monolith, keep it maintainable not over-engineered]]></title>
    <link href="https://geshan.com.np/blog/2018/10/dont-code-your-microservice-like-a-monolith/"/>
    <updated>2018-10-12T15:54:07+11:00</updated>
    <id>https://geshan.com.np/blog/2018/10/dont-code-your-microservice-like-a-monolith</id>
    <content type="html"><![CDATA[<p>Will you use a gun to kill a fly? The answer is NO. The same thing goes when you want to write a microservice application that is going to be maximum of 10K lines of code. Don&rsquo;t over-engineer it. Ok, you have been writing and maintaining large code bases. Some might be 100K+ lines of code but you need to get over your habits and think differently. This post helps you unravel the mysteries of writing small and maintainable microservices. The suggestions are opinionated but it is in practice in a million dollar business.</p>

<p><img class="center" src="/images/microservice-code/lego.jpg" title="&lsquo;Do not code your microservice like a monolith, keep it maintainable not over-engineered&rsquo; &lsquo;Do not code your microservice like a monolith, keep it maintainable not over-engineered&rsquo;" ></p>

<!-- more -->


<h2>TLDR;</h2>

<blockquote><p>Microservices are small software systems. You can safely ditch MVC. Say no to ORM and also not take the design pattern baggage for microservices. Focus on code performance, readability, and maintainability not some old rules and patterns. Those patterns were made when people were not doing microservices.</p></blockquote>

<h2>Why write microservices in the first place?</h2>

<p>Microservices architecture, in my opinion, is breaking one or more monoliths into multiple smaller systems. These are more maintainable, independently developed and deployed pieces of software based on business functions. These smaller (presumably “micro”) systems should focus on only one business function and do it well. The catch here is &ldquo;micro&rdquo;, these pieces should ideally be under 10K lines of code.</p>

<p>As they are independent it helps the business release features faster. The shipments team is not dependent on the checkout team. Something deployed on the shipments app is never going to break checkout. It becomes very decoupled. The blast radius of each change is controlled. That is the reason for rapid microservice adoption.</p>

<p>Now let&rsquo;s look at the ways you were used to doing things and why it makes less sense in this microservices era.</p>

<h2>Do you need MVC?</h2>

<p>Model-View-Controller, I got introduced to it in 2007 or maybe a bit earlier. Then I used to think it was the silver bullet to all software architecture issues. I don&rsquo;t hold that opinion anymore. Yes, you used to work with Java or PHP and every other framework was MVC based. Now, you don&rsquo;t need to be strict about MVC anymore. Focus on clarity and getting things done.</p>

<p>Use controllers if you want and if it still makes sense. Think like my app gets HTTP request and it has to give back HTTP response. Do think of having a backend API and frontend(s) consuming it. Check the code below, it is surely not MVC:</p>

<script src="https://gist.github.com/geshan/1f76e5ebb3c15fd3c147c6c97420f923.js"></script>


<p>You can see the full app <a href="https://github.com/geshan/currency-api">here</a>. Veify the structure it is not MVC :)</p>

<p>So rather than doing an effort to get precise lines of M-V-C, write tests, implement continuous integration. Add some logs and monitoring to the app. Make the code maintainable, keep it as lean and simple as possible.</p>

<h2>Don&rsquo;t take on the ORM overhead</h2>

<p>Object Relation Mapping (ORM) when I first saw an ORM in action, I said to myself this is one of the best things ever known to programmers. 10+ years later I would be cautious to suggest an ORM to any software engineer. Last year I refactored a full ORM implementation to a raw SQL query way and it made that part of the application perform 20% faster. On top of it, the database transactions were evident and the code was far more readable hence maintainable.</p>

<p>Data mapper or Active record both bring their own opinions, ways of doing things and extra weight. This not only causes performance issues but also code readability suffers. Think of the pre and post hooks/event listener Doctrine has, they work like magic and it is always tricky to understand magic.</p>

<p><img class="center" src="/images/microservice-code/pot-on-head.jpg" title="&lsquo;Do not code your microservice like a monolith, keep it maintainable not over-engineered&rsquo; &lsquo;Do not code your microservice like a monolith, keep it maintainable not over-engineered&rsquo;" ></p>

<p>Just try this, explain how an ORM related insert code works VS how a simple and straightforward INSERT SQL query works to a beginner/junior software engineer. You will already regret using that ORM. Especially in the context of microservices ORM is a clear overhead. The microservice is anticipated to be maximum of 10K lines of code and affect hardly 10 tables so just don&rsquo;t use an ORM, period.</p>

<h2>Design patterns might be a baggage</h2>

<p>I am not saying that you don&rsquo;t need to learn about <a href="https://en.wikipedia.org/wiki/Software_design_pattern">software design patterns</a>. You should know about SOLID, law of Demeter, factory pattern, strategy pattern, singleton, adapter pattern etc. Well, most of these make sense if you do object-oriented programming right? What if you write a microservice in Node JS that is 1k lines of code spread across ~7 files. It does one small slice of the business function. All these patterns become nice to know stuff at that point.</p>

<p>Design Patterns are relevant for a code base that is already big and in the next 6-12 months is going to be bigger, your usual monolith. They can turn out to be &ldquo;extra baggage&rdquo; for a service that is 100s of lines of code now and will become 1000s of lines of code in the next 6-12 months. We never foresee it to be bigger than that because to do that other part we will have another microservice. So keep your microservice code fat free and well tested.</p>

<p><img class="center" src="/images/microservice-code/baggage.jpg" title="&lsquo;Do not code your microservice like a monolith, keep it maintainable not over-engineered&rsquo; &lsquo;Do not code your microservice like a monolith, keep it maintainable not over-engineered&rsquo;" ></p>

<h2>Conclusion</h2>

<p>If you still want to code your microservice like the last monolith you worked on maybe you are doing something wrong. Think of it again, if you go for a day trip you don&rsquo;t pack and carry things like you are going for a 2 weeks vacation. Think of code performance and maintainability, let the data speak for you and break the rules. Happy software engineering!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why use docker? 3 reasons from a development perspective]]></title>
    <link href="https://geshan.com.np/blog/2018/10/why-use-docker-3-reasons-from-a-development-perspective/"/>
    <updated>2018-10-10T15:29:22+11:00</updated>
    <id>https://geshan.com.np/blog/2018/10/why-use-docker-3-reasons-from-a-development-perspective</id>
    <content type="html"><![CDATA[<p>Docker has been popular in the technology space in the past 5 years is an understatement. It has <a href="https://trends.google.com/trends/explore?date=2013-09-08%202018-10-08&amp;q=%2Fm%2F0wkcjgj">exploded</a> in usage and popularity in half a decade. Containers have taken us by storm. Newer applications without containerization feel like it is missing something. Docker has stood out to be the king in the container arena. This post details the reasons to use Docker for your development environment.</p>

<p><img class="center" src="/images/why-docker/whale.jpg" title="&lsquo;Why use docker? 3 reasons from a development perspective&rsquo; &lsquo;Why use docker? 3 reasons from a development perspective&rsquo;" ></p>

<!-- more -->


<h2>TLDR;</h2>

<blockquote><p>Docker is super useful for development environment because if it runs on your machine, it runs anywhere. It runs on your friend&rsquo;s machine, on staging and also on production. When a new team member starts, s/he runs 3 commands and the app(s) are running. The new team member can be productive from day 1. Finally, a new version of PHP or MYSQL is coming. You can test your app easily with Docker and make it run in the old version with no issues.</p></blockquote>

<h2>Docker Docker Docker</h2>

<p>You can <a href="https://runnable.com/docker/why-use-docker">read</a> all you want about Virtual Machines (VMs) vs Containers. And there is a list of reasons to use Docker in the <a href="https://www.airpair.com/docker/posts/8-proven-real-world-ways-to-use-docker">real-world</a>. This piece discusses why to use Docker for development. If you want to go hands read about using <a href="https://geshan.com.np/blog/2017/05/how-to-use-docker-compose-with-virtual-hosts-and-services-like-db-for-dev-environment/">docker and docker compose</a> for your development environment.</p>

<p>Docker has many advantages but the most important one is the container analogy. That you don&rsquo;t only ship your code but ship the whole OS and all related layers with each deployment in a standard way. It is a complete package containing the right version of OS, the desired version of the language, any external dependencies of your application and your application code. That too in a lightweight, isolated and resource controllable way. This is where docker blows away the VMs.</p>

<p><img class="center" src="/images/why-docker/ship.jpg" title="&lsquo;Why use docker? 3 reasons from a development perspective&rsquo; &lsquo;Why use docker? 3 reasons from a development perspective&rsquo;" ></p>

<h2>Reasons to use Docker for the development environment</h2>

<p>If you have read this far, now let&rsquo;s dive into the reasons you would want to use Docker for your development environment:</p>

<h3>1. Runs on my machine = runs anywhere</h3>

<p>If you have correctly dockerized your app and it runs without problems on your machine, 99% of the times it will run smoothly anywhere. By anywhere it means on your friend&rsquo;s machine, on the staging environment and production too. Given all of them have docker installed and configured correctly your app will run. Using docker also makes the application code cloud provider agnostic. Your application can potentially run on AWS or GCP or Azure without issues.</p>

<h3>2. New team member can be productive from day 1</h3>

<p>Think of this, a new team member joins then s/he spends more than a day to set up the machine with the right OS. Setup the language(s) used in the company add database(s) on top of it. 2-3 days is wasted on just getting the environment setup correctly. Enter docker + docker-compose, the new joiner sets up the OS. Installs docker then runs 3-5 commands, grabs some coffee and magic: your apps(s) are running. The new joiner can contribute with the working code on day 1. Think of all the cost a company can save with this approach. A streamlined docker implementation makes it a reality.</p>

<h3>3. Test app&rsquo;s compatibility with the newer version of language/database</h3>

<p>Picture this, a new version of the language you use just released. Like you were using PHP 5.6 and 7.0 has come out. You don&rsquo;t know how much work will be needed to make your application compatible with the new version of the language. Use docker here, you just need to run two different docker containers one running the current version and another running the newer version. You can even test the app side by side to measure performance. This can apply for any programming language.</p>

<p>The same technique can be used to say test MYSQL version 5.7 and 8.0. You might think there are tools like NVM (Node version manager) or RVM (Ruby version manager) but things like that don&rsquo;t exist for each language. Also, you can just use docker than overloading your local machine.</p>

<h2>Conclusion</h2>

<p>Docker is a boon to both software engineers and DevOps engineers. It makes releasing software much easier as the whole stack is shipped not only the code. Still, to move your production to Docker many things need to be considered. Things like container builder (for instance <a href="https://cloud.google.com/cloud-build/docs/">Google cloud build</a>), container orchestration (like <a href="https://kubernetes.io/">Kubernetes</a>). So before jumping to the container on staging/production be convinced of its benefits on the local development environment. I hope you exploit Docker to extract the most benefit out of it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Don't just learn a new language/framework, implement it as a running open source project]]></title>
    <link href="https://geshan.com.np/blog/2018/10/dont-just-learn-a-new-language-slash-framework/"/>
    <updated>2018-10-08T15:27:26+11:00</updated>
    <id>https://geshan.com.np/blog/2018/10/dont-just-learn-a-new-language-slash-framework</id>
    <content type="html"><![CDATA[<p>“For the things we have to learn before we can do them, we learn by doing them.” ― Aristotle, The Nicomachean Ethics. Imagine you already read 3 books about cycling. Then someone gave you a cycle and asked to ride it, will you be able to ride it? The simple answer is &ldquo;No&rdquo;. It is not about how much have you read about cycling or how many videos did you watch about it. It is about getting on a cycle, balancing on it, learning the feet, hands and eye co-ordination. Same goes for learning a new tech skill, a new language or framework.</p>

<p><img class="center" src="/images/language-framework-learn/cycle.jpg" title="&lsquo;Dont just learn a new language framework, implement it as a running open source project&rsquo; &lsquo;Dont just learn a new language framework, implement it as a running open source project&rsquo;" ></p>

<!-- more -->


<p>Now if you think how will I do this new project I don&rsquo;t even know language &lsquo;X&rsquo; or framework &lsquo;Y&rsquo; stop complaining. Maybe you are a new starter in tech or coding but you need to know how to learn new things. The best way to learn something new is by doing it. This post will focus on getting some common things right. It will help you get from I want to learn &lsquo;X&rsquo; to I have a project running in &lsquo;X&rsquo;, so follow on. If you are convinced about doing a project to learn something new, open source it. Github is the de facto service to host your open source projects. Then you can leverage lots of services for free. This post will be equally useful for coding new starters as well as experienced software engineers.</p>

<h2>TLDR;</h2>

<blockquote><p>Write a project to learn that language/framework, open source it then leverage services for free. Don&rsquo;t just watch courses, read the docs and then find solutions. Learn by doing. Use git and implement docker in your project. Code correctly add a code quality check service to be aware of the best practices, deploy your project to get a working URL for it.</p></blockquote>

<p><img class="center" src="/images/language-framework-learn/lang-framework-learn.jpg" title="&lsquo;Dont just learn a new language framework, implement it as a running open source project&rsquo; &lsquo;Dont just learn a new language framework, implement it as a running open source project&rsquo;" ></p>

<h2>Don&rsquo;t just watch courses, read the docs and find solutions</h2>

<p>Nowadays, there are a plethora of choices to learn new things. Still, video courses are one of the most popular media. You can learn something new on <a href="https://www.udemy.com">Udemy</a>, <a href="https://www.pluralsight.com/">Pluralsight</a> or even <a href="https://youtube.com">Youtube</a>. Until you learn by doing, watching the videos is only going to help to a certain level. It is better for you to go through the official documentation. For instance, reading the React JS docs is better than only going through a React JS course. You find out the creators&#8217; perspective. The reason behind creating another Javascript framework/library helping you find proper solutions.</p>

<h2>Learn Git to collaborate</h2>

<p>&ldquo;No man is an island&rdquo;, especially in tech you generally don&rsquo;t work alone. You are part of a team. So even when learning something new try to find someone who you can collaborate with. Git is immensely <a href="https://trends.google.com/trends/explore?q=git,svn,mercurial,bazaar">popular</a> compared to any of its competition. It is beneficial when there is more than 1 person writing code for a project. You should learn git by doing, check the Github <a href="https://try.github.io/">tutorial</a>. I would highly recommend the learn by doing section. After you push it to Github anyone can potentially contribute to it.</p>

<h2>Implement docker, get over works on my machine syndrome</h2>

<p>In 2018, if you want to make your application more accessible, use <a href="https://www.docker.com/">Docker</a>. This will also help a lot in increasing contribution for your open source project. Running your project locally with docker compose will be like executing 2 commands. Docker has many advantages. For a beginner, it is a way to make sure your app runs the same way on your machine, your friend&rsquo;s machine. It will also be the same on the server you deploy your app to. As long as it runs on Docker well, you can rest assured it will run without issues on any environment.</p>

<h2>Add code quality check</h2>

<p>Just making it work should not be your priority. Writing quality should also be in your priority. Add code quality checks for the open source project you created for learning. Depending on the language/framework you could choose any service. I would highly recommend <a href="https://codeclimate.com/quality/">Code Climate</a>. Code Climate supports a wide array of languages from Javascript to PHP and from Java/Kotlin to Swift for mobile developers. With the new <a href="https://codeclimate.com/browser-extension/">browser plugin</a>, you get insights about your code in a Github pull request screen. You just connect it once to your Github repo and start seeing your code quality report. You can then better your code quality too. You can have a look at this <a href="https://codeclimate.com/github/geshan/currency-api/src/exchangeRates.js/source">example</a>.</p>

<h2>Deploy your project</h2>

<p>Now you are writing a new project to learn your favorite &lsquo;X&rsquo; or &lsquo;Y&rsquo;. You have written some parts of it, you are collaborating with Git and have the code open source on Github. You have Docker in place and code quality checks run on each push, great! But you can&rsquo;t show it to your friend who is living in a different city/country right? Wrong!</p>

<p>You can use different services to deploy your web application. With a URL you can show it to your friend, a recruiter or anyone who knows the URL. You can deploy it for free to services like <a href="https://www.heroku.com">Heroku</a> or <a href="https://zeit.co/now">Zeit Now</a>.
If you have Dockerized your open source app I would recommend Zeit Now. With the recent <a href="https://zeit.co/github">Github integration</a>, Zeit Now will give a new URL to each pull request. This makes testing a breeze. You can check an example on a demo <a href="https://github.com/geshan/currency-api/pull/9">currency converter API</a> app I wrote.</p>

<h2>Conclusion</h2>

<p>To conclude, learning by doing is the best way to learn a new thing. Your aim should be to not only make it work but do it following the best practices. That is where code quality comes into play. If you can add automated tests and continuous integration it will be icing on the cake for a starter. Wish you all the best for learning by doing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 practical steps to land your first tech job]]></title>
    <link href="https://geshan.com.np/blog/2018/09/7-practical-steps-to-land-your-first-tech-job/"/>
    <updated>2018-09-29T15:55:58+10:00</updated>
    <id>https://geshan.com.np/blog/2018/09/7-practical-steps-to-land-your-first-tech-job</id>
    <content type="html"><![CDATA[<p>&ldquo;If you hate your job, take a loan and you will start liking it&rdquo;. I don&rsquo;t remember where I read this but this sounds convincing. Now think of the tech job market worldwide, saying it is growing would be an understatement, it is booming. Still, why don&rsquo;t fresh graduates not get a job when the pass out of universities? Let&rsquo;s have a closer look at this issue and try to help technology students get a job as soon as their course finishes.</p>

<p><img class="center" src="/images/5-steps-first-tech-job/first-tech-job-a.jpg" title="&lsquo;5 practical steps to land your first tech job&rsquo; &lsquo;5 practical steps to land your first tech job&rsquo;" ></p>

<!-- more -->


<h2>TLDR;</h2>

<blockquote><p>Network in person, use recuriter&rsquo;s help, contribute to open source, list companies/roles you want to work in and learn a new tech thing each month to land your first tech job. Bonus but important points, make a killer resume, have a great pet project deployed online to show and start early.</p></blockquote>

<h2>Interesting subject</h2>

<p>Around 11 years back I wrote this blog post &ldquo;<a href="https://geshan.com.np/blog/2007/11/10-web-by-things-technology-student-or/">10 things a tech student must know</a>&rdquo; then 4 years back I did a talk at the college I completed my bachelor&rsquo;s from titled &ldquo;<a href="https://geshan.com.np/blog/2014/08/things-i-wished-i-knew-while-doing-my/">Things I Wished I Knew While Doing My Tech Bachelor / Undergraduate</a>&rdquo;. Again 2 years back and in Nov of 2017 I did another talk with QnA and interaction with the title &ldquo;<a href="https://geshan.com.np/blog/2016/06/career-paths-for-to-be-tech-graduates-slides/">Career Paths for to Be Tech Graduates</a>&rdquo;  at a couple of college in Kathmandu. I also did another talk called &ldquo;<a href="https://geshan.com.np/blog/2017/02/things-i-wished-i-knew-as-a-junior-developer-slides/">Things I wished I knew as a junior developer</a>&rdquo; for a meetup in Feb 2017. This has been an interesting topic for me in the past decade.</p>

<h2>Why don&rsquo;t students get a tech job after the course?</h2>

<p>Let&rsquo;s face this, it is a mix of the education system and the individual student themselves. I studied my undergrad/bachelors in tech in Kathmandu, Nepal and my master in tech too in the Netherlands. Surely, very different education systems and outlook to education. One thing in common is both don&rsquo;t make the student an employment ready product. On the individual side, don&rsquo;t do a course because your friend is doing it. Simple logic, first ask your self where do you see yourself in 5 or 3 years then backtrack your way to reach there.</p>

<h2>How to fix this?</h2>

<p>I am no education expert or anything still I have worked like a decade in tech and in multiple countries by now. One thing is sure, skills and results are the primary and degrees are secondary. Universities/colleges should try to bridge the gap between students and real market needs. Like I don&rsquo;t know of any university that will teach students lets say <code>git</code> that you are going to use each day at work. That doesn&rsquo;t mean what is being taught is wrong :). Yes, I am ranting a bit here.</p>

<p>On the student&rsquo;s side, you need to research what is relevant for the market, learn on your own and brand yourself so that you can sell your skills faster. For instance, if I interview a candidate who has a good tech blog with helpful and regular posts may be even on medium. Your chances of getting hired are up by like ~5% already. Because being able to put your ideas/learning in words is an important skill for a software engineer.</p>

<p><img class="center" src="/images/5-steps-first-tech-job/first-tech-job-b.jpg" title="&lsquo;5 practical steps to land your first tech job&rsquo; &lsquo;5 practical steps to land your first tech job&rsquo;" ></p>

<h2>Lets get to the steps now</h2>

<p>After all my rants tirades lets focus on how you as a tech student can land a job as soon as you finish your degree. Below are the things you need to do to increase your chances to land your first tech job.</p>

<h3>1. In person networking</h3>

<p>Go to at least 1 <a href="meetup.com">meetup</a>/conference/training/events each month and add at least 2 new people on Linked In who can help you find a job. Not to mention message/email them after the meeting to build a relationship. Meetups are a great way to meet up people who you would normally not meet. Depending on the city you are in like if you are in Sydney you could go to a tech meetup each week. If you are in Kathmandu you could catch a meetup each month. Going to a usually free meetup is beneficial in many ways, you learn new things listening to people, you can network&hellip; Don&rsquo;t underestimate the power of meeting people in the flesh.</p>

<p>So you are asking why would this person refer me? Right? The answer is simple <code>Many companies have referral bonus</code>. If they refer you and you get selected, get the job, complete your probation they get a certain sum of money. A win-win situation for all you, the referrer and the company. Email, then call and ask for a coffee meeting is recommended before asking for a job referral. Of course not to mention you should have an amazing CV.</p>

<h3>2. Use recruiter help</h3>

<p>In the starting, it should be you emailing and potentially calling tech recruiters. The idea is simple, it is a recruiter&rsquo;s job to find good candidates for tech roles. So be open tell them you are looking for junior or starting jobs and try to find a match. Probably the recruiter knows a couple of openings where you could actually be a good fit. Depending on the city there are internships, graduate roles which are specifically targeted at fresh grads. You might need to run away from recruiters after you have some years of experience, but that is a different story.</p>

<h3>3. Contribute to open source</h3>

<p>I know many companies which will look at you github profile first then go through your resume. So <code>actions speak louder than words</code>. To begin with, you don&rsquo;t need to start contributing code. You can start with helping on documentation etc. There are lots of ways to give back to open source. <a href="https://hacktoberfest.digitalocean.com/">Hacktoberfest 2018</a> is starting in 2 days make good use of it. So learning git and github becomes a prerequisite for this step. If you are a tech student in their final semester and don&rsquo;t know git = you don&rsquo;t have a very bright future in tech :).</p>

<h3>4. Make a list of companies with probable roles</h3>

<p>If you don&rsquo;t have a target how will you ever achieve it, if you have a target you can have plans to attain it. Make a list of companies and positions/role that you want to work in when you finish your degree. Towards the end of the course if you are not sure to pick backend or frontend or UI/UX or DevOps/SRE or data engineering or DBA or &hellip; sorry but no one can help a confused person ;). If you see yourself as a frontend engineer at say Atlassian you need to work for it. Another handy tip is to keep a spreadsheet of all the jobs you have applied for with dates to do a proper follow-up. It is not easy to get a call for an interview for less experienced candidates so check step 1 referral helps a lot here.</p>

<h3>5. Learn a new tech thing each month</h3>

<p>Now as you have shortlisted companies and roles you want to work for you have obviously read the job descriptions. So you now know what skills the market and/or the company you aim to join is looking for. Start learning it, dedicate some hours each week/weekend and learn it. Best way to learn is to try to build your pet project, it could be anything that excites you. Don&rsquo;t just go through a course on <code>docker</code> and say yes I know docker. Show it running on a project and then you will actually learn it. If you already know 7 out of 10 things the company will need to teach another junior software engineer, your chances of getting the job automatically becomes higher.</p>

<h2>Conclusion</h2>

<p>There are many other general things that you need to be good on like having a clear and impressive 1-page resume, having at least one project that is online. Like, having basic knowledge of a breadth of things and a bit of depth in the area you want to work in,  knowing your skill and going to the right area of tech also helps. You need to do the above steps like 6-9 months before your course ends else doing things in haste and the very end will not help much.</p>

<p>The tech industry needs new people every year worldwide. From the positive angle, tech needs more and more new people. From the other side, your competition is not only in your city but anywhere in your world so your skills and ability to learn sets you apart. Best of luck hunting for your first tech role!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to do a zero downtime database (DB) migration (schema change) with a practical example]]></title>
    <link href="https://geshan.com.np/blog/2018/05/how-to-do-a-zero-downtime-database-db-migration-schema-change-with-a-practical-example/"/>
    <updated>2018-05-01T04:00:41+10:00</updated>
    <id>https://geshan.com.np/blog/2018/05/how-to-do-a-zero-downtime-database-db-migration-schema-change-with-a-practical-example</id>
    <content type="html"><![CDATA[<p>Database migration on a production database is never simple. Depending on the volume of requests some teams schedule database migration to off hours. You can run your alter statements with zero or minimal downtime following the steps mentioned below with a practical example.</p>

<p><img class="center" src="/images/db-migration/db-migration.png" title="&lsquo;How to do a zero downtime database&rsquo; &lsquo;How to do a zero downtime database&rsquo;" ></p>

<!-- more -->


<h2>Example</h2>

<p>As an example for this post, let&rsquo;s assume you work for an E-commerce company which has both recurring and new customers. You have partners who publicize a discount code valid for a given date range and get a percent of the order&rsquo;s total tracked by their discount code. Below is the schema for the partner and coupon code. Below is the initial schema before any change:</p>

<p><img class="center" src="/images/db-migration/schema-01.png" title="&lsquo;Initial DB schema&rsquo; &lsquo;Initial DB Schema&rsquo;" ></p>

<p>Now the new requirement is to track different commission percent for the new and recurring customer. New and recurring customers are evaluated by a different system/microservice and it is also responsible for commission calculation based on order total which is out of the scope of this focused example.</p>

<p>To do commission tracking by customer type we would decide to add 2 new columns commission_percent_new_customer, commission_percent_recurring_customer, the difficult question is how to roll it out without downtime.</p>

<p><img class="center" src="/images/db-migration/schema-02.png" title="&lsquo;Updated schema with 2 new columns&rsquo; &lsquo;Updated schema with 2 new columns&rsquo;" ></p>

<h3>Migration script (DB schema alter statement)</h3>

<p>The following migration script will update the DB schema to be in the above state for MYSQL DB:</p>

<pre><code>ALTER TABLE `partner_discount_code` ADD `commission_percent_new_customer` DECIMAL NULL AFTER `commission_percent`,
ADD `commission_percent_recurring_customer` DECIMAL NULL AFTER `commission_percent_new_customer`, 
,algorithm=inplace,lock=none;
</code></pre>

<p>Notice the <code>algorithm=inplace,lock=none</code> it is discussed below.</p>

<h2>Evaluating Downtime</h2>

<p>In the above example there can be 2 types of downtime as follows:</p>

<ol>
<li>Tables locked while migration runs</li>
<li>Downtime because of newly introduced columns and code not matching to it</li>
</ol>


<p>For the first downtime issue depending on the database, it can be mitigated to a significant level with executing proper alter SQL statements. For example in MYSQL if <code>,algorithm=inplace, lock=none</code> is suffixed with your alter it will run with 0 to minimum table lock allowing reads and writes while the migration runs. This is especially important when altering tables with millions of rows as the alter can take minutes depending on the structure and data volume of the tables involved.</p>

<p>For the second issue, if db alter and code release is deployed in a specific sequence it can be handled much better. The deployment steps are listed below:</p>

<h2>Deployment Steps</h2>

<ol>
<li>Add the two new columns to the partner_discount_code, let&rsquo;s say the code is in v 1.1 now</li>
<li>Deploy code v 1.2 which adds and edits all 3 columns - commission_percent, commission_percent_new_customer and commission_percent_recurring_customer.</li>
<li>Test that all the things work as expected, even if you need to roll back nothing breaks and it&rsquo;s fully backward compatible</li>
<li>When everything is fine, deploy code v 1.3 that adds or edits only on the 2 new columns</li>
<li>Test it for a day or two, then as per need you can drop the commission_percent column on the partner_discount_code table as it&rsquo;s not used anymore</li>
</ol>


<h3>Final schema after dropping commission_percent column</h3>

<p><img class="center" src="/images/db-migration/schema-03.png" title="&lsquo;Updated schema with 1 column less&rsquo; &lsquo;Updated schema with 1 column less&rsquo;" ></p>

<h2>Things to consider</h2>

<ul>
<li>Always be careful with database migration. It&rsquo;s is surely safe to take a backup of the table you will run the alter statement on before executive it.</li>
<li>Don&rsquo;t deploy the code first that write to new columns then run the migration, it will result in errors as the code will try to access non-existing column(s).</li>
<li>Always think of backward compatibility usually without a revert migration. Generally, access to production database is only given to a select few.</li>
<li>Run drop or rename columns only after you are fully satisfied that the new changes are not breaking anything.</li>
<li>It is better to run migrations (alter SQL) manually than part of the deployment to keep things segregated and more predictable.</li>
</ul>


<h2>Conclusion</h2>

<p>Database migration is not difficult if it is done the right way. Hope this post helps you run your DB migrations in a smoother fashion.</p>
]]></content>
  </entry>
  
</feed>
